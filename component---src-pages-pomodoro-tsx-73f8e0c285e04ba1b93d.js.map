{"version":3,"sources":["webpack:///./node_modules/nothing-mock/dist/nothing-mock.es.js","webpack:///./src/pages/pomodoro.tsx","webpack:///./node_modules/@material-ui/core/esm/Fab/Fab.js","webpack:///./node_modules/@material-ui/icons/esm/TimerOutlined.js","webpack:///./node_modules/@material-ui/icons/esm/NotificationsActive.js","webpack:///./node_modules/browser-monads/lib/index.js"],"names":["n","r","toString","toLocaleString","Symbol","toPrimitive","valueOf","Proxy","Object","freeze","get","t","hasOwnProperty","u","e","o","JSON","stringify","i","parse","pomodoroStates","props","ref","children","classes","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$size","size","_props$variant","variant","other","ButtonBase","root","extended","concat","capitalize","primary","secondary","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","palette","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","display","alignItems","justifyContent","contrastText","main","dark","sizeSmall","sizeMedium","name","createSvgIcon","d","Pomodoro","this","state","Work","timeRemaining","timeStartedAt","percentUntilEnd","themeColor","isPaused","breaksTaken","currentlyTiming","displayText","workLength","shortBreakLength","longBreakLength","_nextState","LongBreak","notifString","Notification","body","onclick","window","focus","ShortBreak","togglePause","setPauseState","setTo","changeTiming","nowTiming","tick","_zeroPad","unpadded","padStart","padEnd","getTime","Math","floor","changeIntervals","MainTimer","render","Tooltip","title","arrow","style","pomodoro","lineHeight","textAlign","position","top","left","margin","aria-label","onClick","verticalAlign","textTransform","fontWeight","fontSize","round","React","ChangeTiming","closeChangeTimingDialog","setState","changeTimingDialogShown","setPause","openChangeTimingDialog","TimerOutlined","Dialog","open","onClose","scroll","DialogTitle","DialogContent","TextField","autoFocus","placeholder","onChange","onTimingChange","id","DialogActions","Button","IntervalEditor","closeIntervalEditorDialog","intervalEditorDialogShown","openIntervalEditorDialog","_isInteger","text","test","target","value","changeWorkLength","onIntervalChange","parseInt","workIntervalError","changeShortBreakLength","shortBreakIntervalError","changeLongBreakLength","longBreakIntervalError","resetToDefaultValues","IconButton","noValidate","gap","defaultValue","error","length","helperText","InputProps","inputMode","endAdornment","InputAdornment","About","openAboutDialog","AboutDialogShown","closeAboutDialog","DialogContentText","href","Progress","CircularProgress","percentToEnd","thickness","NotificationButton","permission","transform","marginTop","requestPermission","then","NotificationsActive","ThoroughPomodoro","x","to","shortBreak","longBreak","localStorage","setItem","componentDidMount","tickPomodoro","setInterval","getItem","Helmet","meta","content","_require","Nothing","isNothing","win","doc","document","module","exports","exists","variable"],"mappings":"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","file":"component---src-pages-pomodoro-tsx-73f8e0c285e04ba1b93d.js","sourcesContent":["var n,\n    r = ((n = function n() {\n  return r;\n}).toString = n.toLocaleString = n[Symbol.toPrimitive] = function () {\n  return \"\";\n}, n.valueOf = function () {\n  return !1;\n}, new Proxy(Object.freeze(n), {\n  get: function get(n, t) {\n    return n.hasOwnProperty(t) ? n[t] : r;\n  }\n})),\n    t = function t(n) {\n  return !(!n || !n.valueOf());\n},\n    u = function u(n) {\n  return n === r;\n},\n    e = function e(n) {\n  return !(n === r || null == n);\n},\n    o = function o(n) {\n  return JSON.stringify(n, function (n, t) {\n    return t === r ? null : t;\n  });\n},\n    i = function i(n) {\n  return JSON.parse(n, function (n, t) {\n    return null === t ? r : t;\n  });\n};\n\nexport { r as Nothing, t as toBool, u as isNothing, e as isSomething, o as serialize, i as deserialize };","/*\r\n* Thorough Pomodoro\r\n* Copyright (C) 2021 Adam Cole\r\n* This program is free software: you can redistribute it and/or modify\r\n* it under the terms of the GNU Affero General Public License as published by\r\n* the Free Software Foundation, either version 3 of the License, or any later version.\r\n* This program is distributed in the hope that it will be useful,\r\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n* GNU Affero General Public License for more details.\r\n* You should have received a copy of the GNU Affero General Public License\r\n* along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\n// This `window` import is pointless, it's just so that during SSR, we make sure that `window` is defined\r\nimport {window} from \"browser-monads\"\r\n// Material-UI!!!111\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Fab,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { NotificationsActive, TimerOutlined } from \"@material-ui/icons\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport * as React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n// Possible states of pomodoro\r\nenum pomodoroStates {\r\n  // All play and no work makes Jack a mere toy\r\n  Work,\r\n  // All work and no play makes Jack a dull boy\r\n  ShortBreak,\r\n  LongBreak,\r\n}\r\nclass Pomodoro {\r\n  // State\r\n  state: pomodoroStates;\r\n  // Time remaining in seconds\r\n  timeRemaining: number;\r\n  // Time that we started at (used for percent)\r\n  timeStartedAt: number;\r\n  // Percent until finished with state\r\n  percentUntilEnd: number;\r\n  // Color that should be displayed in Timer\r\n  themeColor: string;\r\n  // Whether we are paused (true makes tick() a no-op)\r\n  isPaused: boolean;\r\n  // How many breaks have been taken (used to figure out when to take a LongBreak)\r\n  breaksTaken: number;\r\n  // What we are timing\r\n  currentlyTiming: string;\r\n  // What to display that we are timing\r\n  displayText: string;\r\n  // Length of pomodoro\r\n  workLength: number;\r\n  // Length of short break\r\n  shortBreakLength: number;\r\n  // Length of long break\r\n  longBreakLength: number;\r\n  constructor() {\r\n    this.state = pomodoroStates.Work;\r\n    this.timeRemaining = 25 * 60;\r\n    this.timeStartedAt = 25 * 60;\r\n    this.percentUntilEnd = 100;\r\n    this.themeColor = \"#81A1C1\";\r\n    this.isPaused = true;\r\n    this.breaksTaken = 0;\r\n    this.currentlyTiming = \"Please enter thing to time (use button below)\";\r\n    this.displayText = \"Please enter thing to time (use button below)\";\r\n    this.workLength = 25;\r\n    this.shortBreakLength = 5;\r\n    this.longBreakLength = 10;\r\n  }\r\n  // Goes to next pomodoro state, and its attributes\r\n  _nextState() {\r\n    switch (this.state) {\r\n      case pomodoroStates.Work:\r\n        if (this.breaksTaken >= 4) {\r\n          this.timeRemaining = this.longBreakLength * 60;\r\n          this.state = pomodoroStates.LongBreak;\r\n          this.timeStartedAt = this.longBreakLength * 60;\r\n          this.themeColor = \"#BF616A\";\r\n          this.displayText = \"Take a nice long(er) break!\";\r\n          var notifString = \"Take a nice, long(er) break of \" + this.longBreakLength + \" minutes.\"\r\n          var notification = new Notification(\"Thorough Pomodoro\", {body: notifString});\r\n          notification.onclick = () => window.focus();\r\n          return this;\r\n        } else {\r\n          this.timeRemaining = this.shortBreakLength * 60;\r\n          this.state = pomodoroStates.ShortBreak;\r\n          this.timeStartedAt = this.shortBreakLength * 60;\r\n          this.themeColor = \"#EBCB8B\";\r\n          this.displayText = \"Take a little break!\";\r\n          var notifString = \"Take a little \" + this.shortBreakLength + \" minute break.\"\r\n          var notification = new Notification(\"Thorough Pomodoro\", {body: notifString});\r\n          notification.onclick = () => window.focus();\r\n          return this;\r\n        }\r\n      case pomodoroStates.ShortBreak:\r\n        this.timeRemaining = this.workLength * 60;\r\n        this.state = pomodoroStates.Work;\r\n        this.timeStartedAt = this.workLength * 60;\r\n        this.breaksTaken += 1;\r\n        this.themeColor = \"#81A1C1\";\r\n        this.displayText = this.currentlyTiming;\r\n        var notifString = \"Time to work on \" + this.currentlyTiming + \" for \" + this.workLength + \" minutes.\"\r\n        var notification = new Notification(\"Thorough Pomodoro\", {body: notifString});\r\n        notification.onclick = () => window.focus();\r\n        return this;\r\n      case pomodoroStates.LongBreak:\r\n        this.timeRemaining = this.workLength * 60;\r\n        this.state = pomodoroStates.Work;\r\n        this.timeStartedAt = this.workLength * 60;\r\n        this.breaksTaken = 0;\r\n        this.themeColor = \"#81A1C1\";\r\n        this.displayText = this.currentlyTiming;\r\n        var notifString = \"Time to work on \" + this.currentlyTiming + \" for \" + this.workLength + \" minutes.\"\r\n        var notification = new Notification(\"Thorough Pomodoro\", {body: notifString});\r\n        notification.onclick = () => window.focus();\r\n        return this;\r\n    }\r\n  }\r\n  // Toggle if pomodoro is paused or not\r\n  togglePause() {\r\n    if (\r\n      this.currentlyTiming != \"Please enter thing to time (use button below)\"\r\n    ) {\r\n      this.isPaused = !this.isPaused;\r\n      return this;\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n  // Manually set pause state\r\n  setPauseState(setTo: boolean) {\r\n    if (\r\n      this.currentlyTiming != \"Please enter thing to time (use button below)\"\r\n    ) {\r\n      this.isPaused = setTo;\r\n      return this;\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n  // Change what we are timing\r\n  changeTiming(nowTiming: string) {\r\n    this.currentlyTiming = nowTiming;\r\n    if (this.state == pomodoroStates.Work) {\r\n      this.displayText = nowTiming;\r\n    }\r\n    return this;\r\n  }\r\n  // Function to go to next second of pomodoro\r\n  tick() {\r\n    if (!this.isPaused) {\r\n      this.timeRemaining -= 1;\r\n      if (this.timeRemaining <= 0) {\r\n        this._nextState();\r\n        return this;\r\n      }\r\n      this.percentUntilEnd = (this.timeRemaining / this.timeStartedAt) * 100;\r\n      return this;\r\n    } else {\r\n      return this;\r\n    }\r\n  }\r\n  // Zero pads numbers\r\n  _zeroPad(unpadded: number) {\r\n    if (unpadded < 10) {\r\n      return unpadded.toString().padStart(2, \"0\");\r\n    } else {\r\n      return unpadded.toString().padEnd(2, \"0\");\r\n    }\r\n  }\r\n  // Get zero-padded formatted time\r\n  getTime() {\r\n    var minute = this._zeroPad(Math.floor(this.timeRemaining / 60));\r\n    var second = this._zeroPad(this.timeRemaining % 60);\r\n    return minute + \":\" + second;\r\n  }\r\n  // Changes lengths of Pomodoro intervals\r\n  changeIntervals(\r\n    workLength: number,\r\n    shortBreakLength: number,\r\n    longBreakLength: number\r\n  ) {\r\n    this.workLength = workLength;\r\n    this.shortBreakLength = shortBreakLength;\r\n    this.longBreakLength = longBreakLength;\r\n    switch (this.state) {\r\n      case pomodoroStates.Work:\r\n        this.timeStartedAt = this.workLength * 60;\r\n        break;\r\n      case pomodoroStates.ShortBreak:\r\n        this.timeStartedAt = this.shortBreakLength * 60;\r\n        break;\r\n      case pomodoroStates.LongBreak:\r\n        this.timeStartedAt = this.longBreakLength * 60;\r\n        break;\r\n    }\r\n    this.timeRemaining = this.timeStartedAt;\r\n    return this;\r\n  }\r\n}\r\ntype MainTimerProps = {\r\n  pomodoro: Pomodoro;\r\n  togglePause: () => void;\r\n};\r\n// Text for timing information, and button to pause/resume\r\nclass MainTimer extends React.Component<MainTimerProps> {\r\n  // I know using a Fab here is not proper Material Design, but\r\n  // Fabs look and work way better than normal and Material buttons here,\r\n  // and since this one is so big, it doesn't even look like a Fab.\r\n  render() {\r\n    return (\r\n      <Tooltip title=\"Pause/Resume Timer\" arrow>\r\n        <Fab\r\n          style={{\r\n            backgroundColor: this.props.pomodoro.themeColor,\r\n            height: 400,\r\n            width: 400,\r\n            lineHeight: \"400px\",\r\n            textAlign: \"center\",\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            margin: \"-200px 0 0 -200px\",\r\n          }}\r\n          aria-label=\"Pause/Resume Timer\"\r\n          onClick={this.props.togglePause}\r\n        >\r\n          <span\r\n            style={{\r\n              display: \"inline-block\",\r\n              verticalAlign: \"middle\",\r\n              lineHeight: \"normal\",\r\n              textAlign: \"center\",\r\n              textTransform: \"none\",\r\n              fontWeight: 600,\r\n              fontSize: \"400\",\r\n            }}\r\n          >\r\n            {this.props.pomodoro.getTime()}\r\n            <br />\r\n            {this.props.pomodoro.displayText}\r\n            <br />\r\n            {Math.round(this.props.pomodoro.percentUntilEnd)}% left\r\n            {this.props.pomodoro.isPaused && (\r\n              <>\r\n                <br />\r\n                Paused.\r\n              </>\r\n            )}\r\n          </span>\r\n        </Fab>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\ntype ChangeTimingProps = {\r\n  name: string;\r\n  onTimingChange: (x: React.ChangeEvent<HTMLInputElement>) => void;\r\n  setPause: (y: boolean) => void;\r\n};\r\ntype ChangeTimingState = {\r\n  changeTimingDialogShown: boolean;\r\n};\r\n// Change what you are using the timer for.\r\nclass ChangeTiming extends React.Component<\r\n  ChangeTimingProps,\r\n  ChangeTimingState\r\n> {\r\n  constructor(props: ChangeTimingProps) {\r\n    super(props);\r\n    this.state = { changeTimingDialogShown: true };\r\n  }\r\n  closeChangeTimingDialog = () => {\r\n    this.setState({ changeTimingDialogShown: false });\r\n    this.props.setPause(false);\r\n  };\r\n  openChangeTimingDialog = () => {\r\n    this.setState({ changeTimingDialogShown: true });\r\n    this.props.setPause(true);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.state.changeTimingDialogShown && (\r\n          <Tooltip title=\"Change what you're doing\" arrow>\r\n            <Fab\r\n              style={{\r\n                backgroundColor: \"#8FBCBB\",\r\n                color: \"#ECEFF4\",\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                margin: \"280px 0 0 -26px\",\r\n              }}\r\n              aria-label=\"Change what you're doing\"\r\n              onClick={this.openChangeTimingDialog}\r\n            >\r\n              <TimerOutlined />\r\n            </Fab>\r\n          </Tooltip>\r\n        )}\r\n        <Dialog\r\n          open={this.state.changeTimingDialogShown}\r\n          onClose={this.closeChangeTimingDialog}\r\n          scroll=\"body\"\r\n        >\r\n          <DialogTitle>Change timing</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              label=\"What do you want to do?\"\r\n              placeholder=\"Write page 4 of story\"\r\n              onChange={this.props.onTimingChange}\r\n              id=\"todo-input\"\r\n            ></TextField>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.closeChangeTimingDialog}>Done</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n// Edit length of pomodoro and length of breaks\r\ntype IntervalEditorProps = {\r\n  onIntervalChange: (x: number, y: number, z: number) => void;\r\n  pomodoro: Pomodoro;\r\n  setPause: (x: boolean) => void;\r\n};\r\ntype IntervalEditorState = {\r\n  intervalEditorDialogShown: boolean;\r\n  workIntervalError: string;\r\n  shortBreakIntervalError: string;\r\n  longBreakIntervalError: string;\r\n};\r\n\r\nclass IntervalEditor extends React.Component<\r\n  IntervalEditorProps,\r\n  IntervalEditorState\r\n> {\r\n  constructor(props: IntervalEditorProps) {\r\n    super(props);\r\n    this.state = { intervalEditorDialogShown: false, workIntervalError: \"\", shortBreakIntervalError: \"\", longBreakIntervalError: \"\" };\r\n  }\r\n  closeIntervalEditorDialog = () => {\r\n    this.setState({ intervalEditorDialogShown: false });\r\n    this.props.setPause(false);\r\n  };\r\n  openIntervalEditorDialog = () => {\r\n    this.setState({ intervalEditorDialogShown: true });\r\n    this.props.setPause(true);\r\n  };\r\n  _isInteger = (text: React.ChangeEvent<HTMLInputElement>) => {\r\n    const isNumber = /^[0-9\\b]+$/;\r\n    return isNumber.test(text.target.value);\r\n  };\r\n  // The following three functions are disgusting, but this is the only way I could think of to do this\r\n  changeWorkLength = (text: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (this._isInteger(text)) {\r\n      this.props.onIntervalChange(\r\n        parseInt(text.target.value),\r\n        this.props.pomodoro.shortBreakLength,\r\n        this.props.pomodoro.longBreakLength\r\n      ); this.setState({\r\n        workIntervalError: \"\"\r\n      })\r\n      \r\n    } else {\r\n      this.setState({\r\n        workIntervalError: \"Not a number\"\r\n      })\r\n    }\r\n  };\r\n  changeShortBreakLength = (text: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (this._isInteger(text)) {\r\n      this.props.onIntervalChange(\r\n        this.props.pomodoro.workLength,\r\n        parseInt(text.target.value),\r\n        this.props.pomodoro.longBreakLength\r\n      );\r\n      this.setState({\r\n        shortBreakIntervalError: \"\"\r\n      })\r\n    } else {\r\n      this.setState({\r\n        shortBreakIntervalError: \"Not a number\"\r\n      })\r\n    }\r\n  };\r\n  changeLongBreakLength = (text: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (this._isInteger(text)) {\r\n      this.props.onIntervalChange(\r\n        this.props.pomodoro.workLength,\r\n        this.props.pomodoro.shortBreakLength,\r\n        parseInt(text.target.value)\r\n      );\r\n      this.setState({\r\n        longBreakIntervalError: \"\"\r\n      })\r\n    }  else {\r\n      this.setState({\r\n        longBreakIntervalError: \"Not a number\"\r\n      })\r\n    }\r\n  };\r\n  resetToDefaultValues = () => {\r\n    this.props.onIntervalChange(25, 5, 10);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Tooltip title=\"Timer Settings\" arrow>\r\n          <IconButton\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              margin: \"-250px 0 0 200px\",\r\n              color: \"#ECEFF4\",\r\n            }}\r\n            aria-label=\"Timer Settings\"\r\n            onClick={this.openIntervalEditorDialog}\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Dialog\r\n          open={this.state.intervalEditorDialogShown}\r\n          onClose={this.closeIntervalEditorDialog}\r\n        >\r\n          <DialogTitle>Change intervals</DialogTitle>\r\n          <DialogContent>\r\n            <form noValidate style={{ display: \"grid\", gap: 15 }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Length of work interval\"\r\n                onChange={this.changeWorkLength}\r\n                defaultValue={this.props.pomodoro.workLength.toString()}\r\n                id=\"work-interval-input\"\r\n                error = {this.state.workIntervalError.length === 0 ? false : true}\r\n                helperText = {this.state.workIntervalError}\r\n                InputProps={{\r\n                  inputMode: \"numeric\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">min</InputAdornment>\r\n                  ),\r\n                }}\r\n              ></TextField>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Length of short break\"\r\n                onChange={this.changeShortBreakLength}\r\n                defaultValue={this.props.pomodoro.shortBreakLength.toString()}\r\n                id=\"short-break-interval-input\"\r\n                error = {this.state.shortBreakIntervalError.length === 0 ? false : true}\r\n                helperText = {this.state.shortBreakIntervalError}\r\n                InputProps={{\r\n                  inputMode: \"numeric\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">min</InputAdornment>\r\n                  ),\r\n                }}\r\n              ></TextField>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Length of long break\"\r\n                onChange={this.changeLongBreakLength}\r\n                defaultValue={this.props.pomodoro.longBreakLength.toString()}\r\n                id=\"long-break-interval-input\"\r\n                error = {this.state.longBreakIntervalError.length === 0 ? false : true}\r\n                helperText = {this.state.longBreakIntervalError}\r\n                InputProps={{\r\n                  inputMode: \"numeric\",\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">min</InputAdornment>\r\n                  ),\r\n                }}\r\n              ></TextField>\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.resetToDefaultValues}>Reset</Button>\r\n            <Button onClick={this.closeIntervalEditorDialog}>Done</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\ntype AboutState = {\r\n  AboutDialogShown: boolean;\r\n};\r\nclass About extends React.Component<{}, AboutState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = { AboutDialogShown: false };\r\n  }\r\n  openAboutDialog = () => {\r\n    this.setState({\r\n      AboutDialogShown: true,\r\n    });\r\n  };\r\n  closeAboutDialog = () => {\r\n    this.setState({\r\n      AboutDialogShown: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <><Tooltip title=\"What's this?\" arrow>\r\n        <IconButton\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            margin: \"-250px 0 0 -250px\",\r\n            color: \"#ECEFF4\",\r\n          }}\r\n          onClick={this.openAboutDialog}\r\n        >\r\n          <HelpOutlineIcon />\r\n        </IconButton></Tooltip>\r\n        <Dialog\r\n          open={this.state.AboutDialogShown}\r\n          onClose={this.closeAboutDialog}\r\n        >\r\n          <DialogTitle>What's this?</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              The{\" \"}\r\n              <a href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\">\r\n                Pomodoro technique\r\n              </a>{\" \"}\r\n              divides work into 25 minute intervals with 5-10 minute breaks in between. <br />\r\n              Click the button in the middle to pause/resume ther timer, use the\r\n              settings button to change interval lengths, and use the timer\r\n              button to change what you are timing.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.closeAboutDialog}>OK</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\ntype ProgressProps = {\r\n  // Percentage to display\r\n  percentToEnd: number;\r\n};\r\n// Renders ring that represents percentage until next step\r\nclass Progress extends React.Component<ProgressProps, {}> {\r\n  render() {\r\n    return (\r\n      <CircularProgress\r\n        style={{\r\n          color: \"#88C0D0\",\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          margin: \"-250px 0 0 -250px\",\r\n        }}\r\n        size={500}\r\n        value={this.props.percentToEnd}\r\n        variant=\"determinate\"\r\n        thickness={10}\r\n      />\r\n    );\r\n  }\r\n}\r\nclass NotificationButton extends React.Component {\r\n  render() {\r\n    return (<div id=\"ninja\">\r\n      {\"Notification\" in window && Notification.permission === \"default\"&& <Tooltip title=\"Allow notifications\" arrow><IconButton style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        marginTop: \"-300px\",\r\n        color: \"#ECEFF4\",\r\n        \r\n      }}\r\n      onClick={() => Notification.requestPermission().then()}\r\n      ><NotificationsActive/></IconButton></Tooltip>\r\n      }</div>)\r\n  }\r\n}\r\ntype ThoroughPomodoroState = {\r\n  // Current state of pomodoro\r\n  pomodoro: Pomodoro;\r\n};\r\n// Main app\r\nclass ThoroughPomodoro extends React.Component<{}, ThoroughPomodoroState> {\r\n  // typeof setInterval\r\n  tickPomodoro: NodeJS.Timeout | null;\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = { pomodoro: new Pomodoro() };\r\n    this.tickPomodoro = null;\r\n  }\r\n  // These four functions are here, because we can't inline these into JSX props (sadly)\r\n  togglePause = () => {\r\n    this.setState({\r\n      pomodoro: this.state.pomodoro.togglePause(),\r\n    });\r\n  };\r\n  setPause = (x: boolean) => {\r\n    this.setState({\r\n      pomodoro: this.state.pomodoro.setPauseState(x),\r\n    });\r\n  };\r\n  changeTiming = (to: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      pomodoro: this.state.pomodoro.changeTiming(to.target.value),\r\n    });\r\n  };\r\n  onIntervalChange = (\r\n    pomodoro: number,\r\n    shortBreak: number,\r\n    longBreak: number\r\n  ) => {\r\n    this.setState({\r\n      pomodoro: this.state.pomodoro.changeIntervals(\r\n        pomodoro,\r\n        shortBreak,\r\n        longBreak\r\n      ),\r\n    });\r\n    // Save intervals for next page load\r\n    window.localStorage.setItem(\"work\", pomodoro.toString());\r\n    window.localStorage.setItem(\"shortBreak\", shortBreak.toString());\r\n    window.localStorage.setItem(\"longBreak\", longBreak.toString());\r\n  };\r\n  componentDidMount = () => {\r\n    this.tickPomodoro = setInterval(\r\n      () =>\r\n        this.setState({\r\n          pomodoro: this.state.pomodoro.tick(),\r\n        }),\r\n      1000\r\n    );\r\n    // If *all* saved intervals exist, then load them into pomodoro, else reset all of them to the default values\r\n    if (\r\n      window.localStorage.getItem(\"work\") &&\r\n      window.localStorage.getItem(\"shortBreak\") &&\r\n      window.localStorage.getItem(\"longBreak\")\r\n    ) {\r\n      this.setState({\r\n        pomodoro: this.state.pomodoro.changeIntervals(\r\n          parseInt(window.localStorage.getItem(\"work\")!),\r\n          parseInt(window.localStorage.getItem(\"shortBreak\")!),\r\n          parseInt(window.localStorage.getItem(\"longBreak\")!)\r\n        ),\r\n      });\r\n    } else {\r\n      window.localStorage.setItem(\"work\", \"25\");\r\n      window.localStorage.setItem(\"shortBreak\", \"5\");\r\n      window.localStorage.setItem(\"longBreak\", \"10\");\r\n    }\r\n    \r\n  };\r\n  render() {\r\n    return (\r\n      <React.StrictMode>\r\n        \r\n        <Helmet title=\"Thorough Pomodoro\" meta={[{name: \"description\", content: \"Simple Pomodoro timer. Copyright Adam Cole 2021, licensed under GNU AGPL-3.0\"}]}><style>{\"body{background-color: #2E3440;}\"}</style></Helmet>\r\n        <main>\r\n        <noscript><h1>Uh-Oh Spaghettio!</h1><p>I don't know how you expect to browse the web without JavaScript enabled, but you need it for this page.</p></noscript>\r\n        <div>\r\n          <Progress percentToEnd={this.state.pomodoro.percentUntilEnd} />\r\n          <About />\r\n          <NotificationButton />\r\n          <MainTimer\r\n            pomodoro={this.state.pomodoro}\r\n            togglePause={this.togglePause}\r\n          />\r\n          <IntervalEditor\r\n            onIntervalChange={this.onIntervalChange}\r\n            setPause={this.setPause}\r\n            pomodoro={this.state.pomodoro}\r\n          />\r\n          <ChangeTiming\r\n            name=\"\"\r\n            onTimingChange={this.changeTiming}\r\n            setPause={this.setPause}\r\n          />\r\n        </div>\r\n        </main>\r\n      </React.StrictMode>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThoroughPomodoro;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'round' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.07 1.01h-6v2h6v-2zm-4 13h2v-6h-2v6zm8.03-6.62l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.14 4.74 14.19 4 12.07 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.11-.74-4.06-1.97-5.61zm-7.03 12.62c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'TimerOutlined');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42zM18 11c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2v-5zm-6 11c.14 0 .27-.01.4-.04.65-.14 1.18-.58 1.44-1.18.1-.24.15-.5.15-.78h-4c.01 1.1.9 2 2.01 2z\"\n}), 'NotificationsActive');","'use strict';\n\nvar _require = require('nothing-mock'),\n    Nothing = _require.Nothing,\n    isNothing = _require.isNothing;\n\nvar win = typeof window !== 'undefined' ? window : Nothing;\nvar doc = typeof document !== 'undefined' ? document : Nothing;\nmodule.exports.window = win;\nmodule.exports.document = doc;\n\nmodule.exports.exists = function (variable) {\n  return !isNothing(variable);\n};"],"sourceRoot":""}