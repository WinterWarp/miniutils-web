{"version":3,"sources":["webpack:///./node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","webpack:///./src/pages/404.tsx"],"names":["props","children","localTheme","theme","outerTheme","useMemo","output","mergeOuterLocalTheme","createElement","Provider","value","createMuiTheme","palette","type","primary","main","secondary","background","default","paper","text","disabled","hint","error","warning","info","success","title","meta","name","content","variant","color"],"mappings":"2FAAA,yEA4De,IA/Bf,SAAuBA,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAaF,EAAMG,MACnBC,EAAa,cAQbD,EAAQ,IAAME,SAAQ,WACxB,IAAIC,EAAwB,OAAfF,EAAsBF,EAlCvC,SAA8BE,EAAYF,GACxC,MAA0B,mBAAfA,EACSA,EAAWE,GAWxB,YAAS,GAAIA,EAAYF,GAqBkBK,CAAqBH,EAAYF,GAMjF,OAJc,MAAVI,IACFA,EAAO,KAAyB,OAAfF,GAGZE,IACN,CAACJ,EAAYE,IAChB,OAAoB,IAAMI,cAAc,IAAaC,SAAU,CAC7DC,MAAOP,GACNF,K,oCCnDL,uEAuCME,EAAQQ,YAjCqB,CACjCC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAAS,UACTC,MAAO,WAETC,KAAM,CACJN,QAAS,UACTE,UAAW,UACXK,SAAU,UACVC,KAAM,WAERC,MAAO,CACLR,KAAM,WAERS,QAAS,CACPT,KAAM,WAERU,KAAM,CACJV,KAAM,WAERW,QAAS,CACPX,KAAM,cAMG,qBACX,OAAO,gBAAC,aAAD,KACH,gBAAC,IAAD,CAAQY,MAAM,gBAAgBC,KAAM,CAAC,CAACC,KAAM,cAAeC,QAAS,eAAe,6BAAQ,oCAC3F,gBAAC,IAAD,CAAe3B,MAAOA,GACvB,gBAAC,IAAD,CAAY4B,QAAQ,KAAKC,MAAM,eAA/B,iBACA,gBAAC,IAAD,CAAYD,QAAQ,YAAYC,MAAM,aAAY","file":"component---src-pages-404-tsx-60baf98b2855689ddbe7.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? void 0 : void 0;\n}\n\nexport default ThemeProvider;","import * as React from \"react\";\r\nimport {Helmet} from \"react-helmet\"\r\nimport {Typography} from \"@material-ui/core\";\r\n// Begin Nord Material-UI theme\r\nimport { ThemeOptions, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst themeOptions: ThemeOptions = {\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#81a1c1',\r\n    },\r\n    secondary: {\r\n      main: '#88c0d0',\r\n    },\r\n    background: {\r\n      default: '#2e3440',\r\n      paper: '#3b4252',\r\n    },\r\n    text: {\r\n      primary: '#eceff4',\r\n      secondary: '#e5e9f0',\r\n      disabled: '#d8dee9',\r\n      hint: '#d8dee9',\r\n    },\r\n    error: {\r\n      main: '#bf616a',\r\n    },\r\n    warning: {\r\n      main: '#d08770',\r\n    },\r\n    info: {\r\n      main: '#5e81ac',\r\n    },\r\n    success: {\r\n      main: '#a3be8c',\r\n    },\r\n  },\r\n};\r\nconst theme = createMuiTheme(themeOptions)\r\n// End Nord Material-UI theme\r\nexport default () =>{\r\n    return(<React.StrictMode>\r\n        <Helmet title=\"404 Not Found\" meta={[{name: \"description\", content: \"Not Found\"}]}><style>{\"body{background-color: #2E3440}\"}</style></Helmet>\r\n        <ThemeProvider theme={theme}>\r\n       <Typography variant=\"h1\" color=\"textPrimary\">404 Not found</Typography>\r\n       <Typography variant=\"subtitle1\" color=\"secondary\"><i>\"What do you want from me?\"</i></Typography> \r\n       </ThemeProvider></React.StrictMode>)\r\n}"],"sourceRoot":""}